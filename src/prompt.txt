export interface Product {
  product_id: number;
  name: string;
  description: string;
  category: string;
  brand: string;
  model: string;
  collection: string;
  sku: string;
  price: number;
  stock_quantity: number;
  created_at: string; // Assuming timestamp is returned as string
  updated_at: string; // Assuming timestamp is returned as string
}

export interface ProductInfo {
  name: string;
  price: number;
  mainImage: string;
}*,
*::before,
*::after {
  box-sizing: border-box;
}

.img-slider-container {
  width: 100%;
  height: calc(100vh - 10rem);
  position: relative;
  overflow: hidden;
}

.img-slider-img {
  object-fit: cover;
  object-position: 75% 50%;
  width: 100%;
  height: 100%;
  display: block;
}

.img-slider-btn {
  all: unset;
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  padding: 1rem;
  cursor: pointer;
  transition: background-color 0.2s; 
}

.img-slider-btn:hover {
  background-color: rgb(0, 0, 0, 0.2);
}

.img-slider-btn > * {
  stroke: white;
  fill: black;
  width: 2rem;
}import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
import sqlite3 from 'sqlite3';
import { open } from 'sqlite';

async function openDB() {
  return open({
    filename: './data/appdb.db',
    driver: sqlite3.Database
  });
}

export default openDB;"use server"
import { ProductInfo } from "@/types/types";

import openDB from "@/lib/db"

export async function getAllProducts() {
  const db = await openDB();
  const products = await db.all('SELECT * FROM products WHERE brand = "Fender" AND model = "Telecaster"');
  return products;
}

// Images from db are related to a productId, 
// Images are labeled by type : ex: main, hr-front...
// Goal of this function is to access: name + price + main-image
export async function getProductInfo(productId: number): Promise<ProductInfo> {
  console.log("getProductInfo called with productId: ", productId);
  const db = await openDB();
  const product = await db.get('SELECT name, price FROM products WHERE product_id = ?', [productId]);
  const mainImage = await db.get('SELECT image_url FROM images WHERE product_id = ? AND image_type = "main"', [productId]);
  console.log("Server Test: ", mainImage);
  console.log("Server Test: ", product.name);
  return {
    name: product.name,
    price: product.price,
    mainImage: mainImage.image_url
  };
}"use client";
import Image from "next/image";
import { useState } from "react";
import { ArrowBigLeft, ArrowBigRight } from "lucide-react";
import "../styles/image-slider.css";

type ImageSliderProps = {
  imagesUrls: string[];
};

export function ImageSlider({ imagesUrls }: ImageSliderProps) {
  const [imageIndex, setImageIndex] = useState(0);

  function showNextImage() {
    setImageIndex((imageIndex) => {
      if (imageIndex === imagesUrls.length - 1) return 0;
      return imageIndex + 1;
    });
  }

  function showPreviousImage() {
    setImageIndex((imageIndex) => {
      if (imageIndex === 0) return imagesUrls.length - 1;
      return imageIndex - 1;
    });
  }

  return (
    <div className="bg-black w-full h-full relative">
      <Image src={imagesUrls[imageIndex]} alt='slider image' className="img-slider-img " />
      <button className='img-slider-btn' style={{left: 0}} onClick={showNextImage}>
        <ArrowBigLeft />
      </button>
      <button className='img-slider-btn' style={{right: 0}} onClick={showPreviousImage}>
        <ArrowBigRight />
      </button>

      </div>
      
  );
}

export default ImageSlider;
const Footer = () => {
  return (
    <div className="flex">
      <div className="flex flex-col">
        <p>Don&apos;t miss out!</p>
        <p>
          Be the first to know about new products, sales, and exclusive offers.
        </p>
      </div>
      <div>
        <form>
          <input type="email" placeholder="Enter your email" />
          <button>Subscribe</button>
        </form>
        </div>

    </div>
  );
};

export default Footer;
"use client";
import { Triangle } from "lucide-react";
import { useState, useEffect } from "react";

const Category = () => {
  return (
      <ul className="bg-red-500 flex justify-center gap-8 h-1/5">
        <li className="flex items-center">
          Electrics 
        </li>
        <li className="flex items-center">
          Acoustic
        </li>
        <li className="flex items-center">
          Bass
        </li>
        <li className="flex items-center">
          Amps & Audio
        </li>
        <li className="flex items-center">
          Accessories
        </li>
        <li className="flex items-center">
          Effects Pedals
        </li>
      </ul>

  );
}

const Navbar = () => {
  const [windowWidth, setWindowWidth] = useState(0);

  useEffect(() => {
    const handleResize = () => {
      setWindowWidth(window.innerWidth);
    };
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  return (
    <nav className="bg-red-500 sticky top-0 z-[100] bg-white/75 backdrop-blur-lg transition-all h-[10rem] overflow-hidden border-b border-black">
      <div className="h-4/5 bg-blue-500 flex justify-evenly items-center ">
        <div className='w-[250px] text-center'>Logo</div>
        <input
          type="text"
          placeholder="Search"
          className="sm:w-[450px] lg:w-[720px] bg-transparent px-6 py-2 font-medium text-base leading-none tracking-wider text-black rounded-full border border-gray-300 h-12 max-h-12"
        />
        <div className='text-center w-[250px]'>
          <div>Hamburger menu</div>
          <div>Sign In</div>
        </div>
      </div>
     {windowWidth >= 1280 && <Category />} 
    </nav>
  );
};

export default Navbar;
import { ProductInfo } from "@/types/types";
import { getAllProducts,  } from "@/actions";
import { getProductInfo } from "@/actions";
import Image from "next/image";

export function DisplayProducts({ products }: { products: Awaited<ReturnType<typeof getAllProducts>>}) {
  return (
    <div>
      <h1>Fender Telecaster Products</h1>
      <ul>
        {products.map((product) => (
          <li key={product.product_id}>
            <h2>{product.name}</h2>
            <p>{product.description}</p>
            <p>Price: ${product.price}</p>
            <p>Stock: {product.stock_quantity}</p>
          </li>
        ))}
      </ul>
    </div>
  );
}

export function ProductDisplayInfo( {title, products}: {title: string, products: Awaited<ReturnType<typeof getAllProducts>>} ) {
  return (
    <div className='w-full mt-[3rem] flex-grow overflow-hidden'>
      <h1 className='uppercase text-4xl'>{title}</h1>
      <div>
        <DisplayProducts products={products}/>
      </div>
    </div>
  );
}



export function DisplayByIdWithImage({ product }: { product: ProductInfo}) {
  return (
    <div className="flex flex-col h-[500px] w-[300px] bg-gray-200 items-center gap-[2rem] py-[2rem]">
      <div className='h-[350px]'>
        <Image src={product.mainImage} alt={product.name} className='object-contain h-full'/>
      </div>
      <div className="text-center">
        <h1>{product.name}</h1>
        <p>${product.price}</p>
      </div>
      
    </div>
  );
}

export function ProductSlider( {title, product}: {title: string, product: ProductInfo} ) {
  return (
    <div className='w-full mt-[3rem] flex-grow'>
      <h1 className='uppercase text-4xl mb-[3rem]'>{title}</h1>
      <div>
        <DisplayByIdWithImage product={product}/>
      </div>
    </div>
  );
}


export default ProductSlider;import { cn } from "@/lib/utils";
import { ReactNode } from "react";

const MaxWidthWrapper = ({
  className,
  children,
}: {
  className?: string;
  children: ReactNode;
}) => {
  return (
    <div
      className={cn(
        "h-full max-auto w-full max-w-screem-xl px-2.5 md:px-20",
        className
      )}
    >
      {children}
    </div>
  );
};

export default MaxWidthWrapper;
import React from "react";
import ImageSlider from "./ImageSlider";
import "../styles/image-slider.css";

const CAROUSELS_ASSETS = [
  "/Stratocaster.jpg",
  "/Squier.jpg"
];

export default function HeroCarousel() {
  return (
    <div className='img-slider-container' >
      <ImageSlider imagesUrls={CAROUSELS_ASSETS} />
    </div>
  );
}
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <Navbar />
        
        {children}
        {/* <Footer /> */}
      </body>
    </html>
  );
}
@tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer base {
    :root {
      --background: 0 0% 100%;
      --foreground: 240 10% 3.9%;

      --card: 0 0% 100%;
      --card-foreground: 240 10% 3.9%;

      --popover: 0 0% 100%;
      --popover-foreground: 240 10% 3.9%;

      --primary: 240 5.9% 10%;
      --primary-foreground: 0 0% 98%;

      --secondary: 240 4.8% 95.9%;
      --secondary-foreground: 240 5.9% 10%;

      --muted: 240 4.8% 95.9%;
      --muted-foreground: 240 3.8% 46.1%;

      --accent: 240 4.8% 95.9%;
      --accent-foreground: 240 5.9% 10%;

      --destructive: 0 84.2% 60.2%;
      --destructive-foreground: 0 0% 98%;

      --border: 240 5.9% 90%;
      --input: 240 5.9% 90%;
      --ring: 240 10% 3.9%;

      --radius: 0.5rem;
    }

    .dark {
      --background: 240 10% 3.9%;
      --foreground: 0 0% 98%;

      --card: 240 10% 3.9%;
      --card-foreground: 0 0% 98%;

      --popover: 240 10% 3.9%;
      --popover-foreground: 0 0% 98%;

      --primary: 0 0% 98%;
      --primary-foreground: 240 5.9% 10%;

      --secondary: 240 3.7% 15.9%;
      --secondary-foreground: 0 0% 98%;

      --muted: 240 3.7% 15.9%;
      --muted-foreground: 240 5% 64.9%;

      --accent: 240 3.7% 15.9%;
      --accent-foreground: 0 0% 98%;

      --destructive: 0 62.8% 30.6%;
      --destructive-foreground: 0 0% 98%;

      --border: 240 3.7% 15.9%;
      --input: 240 3.7% 15.9%;
      --ring: 240 4.9% 83.9%;
    }
  }

  @layer base {
    * {
      @apply border-border;
    }
    body {
      @apply bg-background text-foreground;
    }
  }import MaxWidthWrapper from "../components/MaxWidthWrapper";
import HeroCarousel from "../components/HeroCarousel";
import ProductSlider from "../components/ProductSlider";
import { ProductDisplayInfo } from "../components/ProductSlider";
import { getAllProducts, getProductInfo } from "@/actions";

export default async function Home() {
  const product = await getAllProducts();
  const productById = await getProductInfo(1);
  console.log("Name: ", productById.name, "Price: ", productById.price, "Url: ", productById.mainImage);

  return (
    <div>
      {/* { JSON.stringify(product) } */}
      <section>
        <HeroCarousel />
      </section>
      <section className="bg-red-400">
        <MaxWidthWrapper className="flex flex-col h-[calc(100vh-10rem)]">
          <ProductDisplayInfo title="Featured Products" products={product} />
        </MaxWidthWrapper>
      </section>
      <section className="bg-blue-400">
        <MaxWidthWrapper className="flex flex-col h-[calc(100vh-10rem)]">
          <ProductSlider title="Featured Products" product={productById} />
        </MaxWidthWrapper>
      </section>
    </div>
  );
}
